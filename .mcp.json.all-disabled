{
  "mcpServers": {
    "_notion": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@notionhq/notion-mcp-server"
      ],
      "env": {
        "NOTION_TOKEN": "$NOTION_TOKEN"
      }
    },
    "_supabase": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@supabase/mcp-server-supabase@latest"
      ],
      "env": {
        "SUPABASE_ACCESS_TOKEN": "$SUPABASE_ACCESS_TOKEN"
      }
    },
    "_task-master-ai": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "--package=task-master-ai",
        "task-master-ai"
      ],
      "env": {
        "ANTHROPIC_API_KEY": "$ANTHROPIC_API_KEY",
        "PERPLEXITY_API_KEY": "$PERPLEXITY_API_KEY",
        "OPENAI_API_KEY": "$OPENAI_API_KEY",
        "GOOGLE_API_KEY": "$GOOGLE_API_KEY",
        "XAI_API_KEY": "$XAI_API_KEY",
        "OPENROUTER_API_KEY": "$OPENROUTER_API_KEY",
        "MISTRAL_API_KEY": "$MISTRAL_API_KEY",
        "AZURE_OPENAI_API_KEY": "$AZURE_OPENAI_API_KEY",
        "OLLAMA_API_KEY": "$OLLAMA_API_KEY"
      }
    },
    "_github": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-github"
      ],
      "env": {
        "GITHUB_PERSONAL_ACCESS_TOKEN": "$GITHUB_PERSONAL_ACCESS_TOKEN"
      }
    },
    "_memory": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@modelcontextprotocol/server-memory"
      ],
      "env": {
        "MEMORY_FILE_PATH": "/Users/harrysayers/.cursor/memory.json"
      }
    },
    "_shadcn-ui": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@jpisnice/shadcn-ui-mcp-server",
        "--github-api-key",
        "$GITHUB_PERSONAL_ACCESS_TOKEN"
      ]
    },
    "_exa": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "exa-mcp-server"
      ],
      "env": {
        "EXA_API_KEY": "$EXA_API_KEY"
      }
    },
    "_n8n": {
      "type": "stdio",
      "command": "node",
      "args": [
        "/Users/harrysayers/n8n-mcp/dist/mcp/index.js"
      ],
      "env": {
        "MCP_MODE": "stdio",
        "LOG_LEVEL": "error",
        "DISABLE_CONSOLE_OUTPUT": "true",
        "N8N_API_URL": "https://n8n.sayers.app",
        "N8N_API_KEY": "$N8N_API_KEY"
      }
    },
    "_awesome-n8n-templates": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "mcp-remote",
        "https://gitmcp.io/enescingoz/awesome-n8n-templates"
      ]
    },
    "_graphiti-personal": {
      "type": "stdio",
      "command": "/opt/homebrew/bin/uv",
      "args": [
        "run",
        "--isolated",
        "--directory",
        "/Users/harrysayers/Developer/claudelife/graphiti_mcp_server",
        "--project",
        ".",
        "graphiti_mcp_server.py",
        "--transport",
        "stdio",
        "--group-id",
        "personal"
      ],
      "env": {
        "NEO4J_URI": "bolt://localhost:7687",
        "NEO4J_USER": "neo4j",
        "NEO4J_PASSWORD": "neo4j",
        "OPENAI_API_KEY": "$OPENAI_API_KEY",
        "MODEL_NAME": "gpt-4o-mini",
        "GRAPHITI_TELEMETRY_ENABLED": "false"
      }
    },
    "_graphiti-finance": {
      "type": "stdio",
      "command": "/opt/homebrew/bin/uv",
      "args": [
        "run",
        "--isolated",
        "--directory",
        "/Users/harrysayers/Developer/claudelife/graphiti_mcp_server",
        "--project",
        ".",
        "graphiti_mcp_server.py",
        "--transport",
        "stdio",
        "--group-id",
        "finance"
      ],
      "env": {
        "NEO4J_URI": "bolt://localhost:7687",
        "NEO4J_USER": "neo4j",
        "NEO4J_PASSWORD": "neo4j",
        "OPENAI_API_KEY": "$OPENAI_API_KEY",
        "MODEL_NAME": "gpt-4o-mini",
        "GRAPHITI_TELEMETRY_ENABLED": "false"
      }
    },
    "_graphiti-mokai": {
      "type": "stdio",
      "command": "/opt/homebrew/bin/uv",
      "args": [
        "run",
        "--isolated",
        "--directory",
        "/Users/harrysayers/Developer/claudelife/graphiti_mcp_server",
        "--project",
        ".",
        "graphiti_mcp_server.py",
        "--transport",
        "stdio",
        "--group-id",
        "mokai"
      ],
      "env": {
        "NEO4J_URI": "bolt://localhost:7687",
        "NEO4J_USER": "neo4j",
        "NEO4J_PASSWORD": "neo4j",
        "OPENAI_API_KEY": "$OPENAI_API_KEY",
        "MODEL_NAME": "gpt-4o-mini",
        "GRAPHITI_TELEMETRY_ENABLED": "false"
      }
    },
    "_graphiti-mok-house": {
      "type": "stdio",
      "command": "/opt/homebrew/bin/uv",
      "args": [
        "run",
        "--isolated",
        "--directory",
        "/Users/harrysayers/Developer/claudelife/graphiti_mcp_server",
        "--project",
        ".",
        "graphiti_mcp_server.py",
        "--transport",
        "stdio",
        "--group-id",
        "mok-house"
      ],
      "env": {
        "NEO4J_URI": "bolt://localhost:7687",
        "NEO4J_USER": "neo4j",
        "NEO4J_PASSWORD": "neo4j",
        "OPENAI_API_KEY": "$OPENAI_API_KEY",
        "MODEL_NAME": "gpt-4o-mini",
        "GRAPHITI_TELEMETRY_ENABLED": "false"
      }
    },
    "_graphiti-ai-brain": {
      "type": "stdio",
      "command": "/opt/homebrew/bin/uv",
      "args": [
        "run",
        "--isolated",
        "--directory",
        "/Users/harrysayers/Developer/claudelife/graphiti_mcp_server",
        "--project",
        ".",
        "graphiti_mcp_server.py",
        "--transport",
        "stdio",
        "--group-id",
        "ai-brain"
      ],
      "env": {
        "NEO4J_URI": "bolt://localhost:7687",
        "NEO4J_USER": "neo4j",
        "NEO4J_PASSWORD": "neo4j",
        "OPENAI_API_KEY": "$OPENAI_API_KEY",
        "MODEL_NAME": "gpt-4o-mini",
        "GRAPHITI_TELEMETRY_ENABLED": "false"
      }
    },
    "_graphiti-claudelife": {
      "type": "stdio",
      "command": "/opt/homebrew/bin/uv",
      "args": [
        "run",
        "--isolated",
        "--directory",
        "/Users/harrysayers/Developer/claudelife/graphiti_mcp_server",
        "--project",
        ".",
        "graphiti_mcp_server.py",
        "--transport",
        "stdio",
        "--group-id",
        "claudelife"
      ],
      "env": {
        "NEO4J_URI": "bolt://localhost:7687",
        "NEO4J_USER": "neo4j",
        "NEO4J_PASSWORD": "neo4j",
        "OPENAI_API_KEY": "$OPENAI_API_KEY",
        "MODEL_NAME": "gpt-4o-mini",
        "GRAPHITI_TELEMETRY_ENABLED": "false"
      }
    },
    "_context7": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@upstash/context7-mcp"
      ],
      "env": {
        "CONTEXT7_API_KEY": "$CONTEXT7_API_KEY"
      }
    },
    "_upbank": {
      "type": "stdio",
      "command": "/Users/harrysayers/Developer/claudelife/.mcp/fastmcp-env/bin/python",
      "args": [
        "/Users/harrysayers/Developer/claudelife/.mcp/upbank_server.py"
      ],
      "env": {
        "UPBANK_API_TOKEN": "$UPBANK_API_TOKEN",
        "UPBANK_API_BASE_URL": "https://api.up.com.au/api/v1"
      }
    },
    "_fastmcp-brain": {
      "type": "stdio",
      "command": "/Users/harrysayers/Developer/claudelife/.mcp/fastmcp-env/bin/python",
      "args": [
        "/Users/harrysayers/Developer/claudelife/.mcp/fastmcp_server.py"
      ],
      "env": {}
    },
    "_claudelife-business-api": {
      "type": "sse",
      "url": "http://localhost:8001/mcp",
      "env": {}
    },
    "_claudelife-financial-api": {
      "type": "sse",
      "url": "http://localhost:8002/mcp",
      "env": {
        "SUPABASE_URL": "$SUPABASE_URL",
        "SUPABASE_ANON_KEY": "$SUPABASE_ANON_KEY",
        "SUPABASE_DB_HOST": "db.gshsshaodoyttdxippwx.supabase.co",
        "SUPABASE_DB_PORT": "6543",
        "SUPABASE_DB_NAME": "postgres",
        "SUPABASE_DB_USER": "postgres.gshsshaodoyttdxippwx",
        "SUPABASE_DB_PASSWORD": "$SUPABASE_DB_PASSWORD"
      }
    },
    "_mindsdb": {
      "type": "sse",
      "url": "http://localhost:47334/mcp/sse",
      "env": {}
    },
    "_docker": {
      "type": "stdio",
      "command": "uvx",
      "args": [
        "docker-mcp"
      ],
      "env": {}
    },
    "_executeautomation-playwright-server": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@executeautomation/playwright-mcp-server"
      ]
    },
    "_gmail": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@gongrzhe/server-gmail-autoauth-mcp"
      ]
    },
    "_serena": {
      "type": "stdio",
      "command": "npx",
      "args": [
        "-y",
        "@agentic-ai/serena-mcp"
      ],
      "env": {}
    },
    "_gptr-mcp": {
      "type": "stdio",
      "command": "python",
      "args": [
        "/Users/harrysayers/Developer/gptr-mcp/server.py"
      ],
      "env": {
        "OPENAI_API_KEY": "$OPENAI_API_KEY",
        "ANTHROPIC_API_KEY": "$ANTHROPIC_API_KEY",
        "TAVILY_API_KEY": "placeholder"
      }
    }
  }
}
